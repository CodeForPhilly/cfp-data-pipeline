name: main
on:
  workflow_dispatch:
  push:
    branches: ["master", "staging"]

jobs:
  deploy:
    name: Deploy airflow
    runs-on: ubuntu-18.04
    steps:
      - name: Create SSH key
        run: |
          mkdir -p ~/.ssh/
          echo "$PROD_SSHKEY" > ~/.ssh/private.key
          sudo chmod 600 ~/.ssh/private.key
          echo "$PROD_SSHKNOWNHOSTS" > ~/.ssh/known_hosts
        shell: bash
        env:
          PROD_SSHKEY: ${{secrets.PROD_SSHKEY}}
          PROD_SSHKNOWNHOSTS: ${{secrets.SSHKNOWNHOSTS}}
      - name: Make .env
        uses: SpicyPizza/create-envfile@v1
        with:
          envkey_DEFAULT_USER: ${{ secrets.DEFAULT_USER }}
          envkey_DEFAULT_PASSWORD: ${{ secrets.DEFAULT_PASSWORD }}
          envkey_LADDR_DB_USER: ${{ secrets.LADDR_DB_USER }}
          envkey_LADDR_DB_PASS: ${{ secrets.LADDR_DB_PASS }}
          envkey_FERNET_KEY: ${{ secrets.FERNET_KEY }}
          envkey_SECRET_KEY: ${{ secrets.SECRET_KEY }}
          envkey_SLACK_BOT_USER_OAUTH_TOKEN: ${{ secrets.SLACK_BOT_USER_OAUTH_TOKEN }}
          envkey_MELTANO_PROJECT_ROOT: /usr/local/meltano/cfp-pipeline
          envkey_TAP_GITHUB_ACCESS_TOKEN: ${{ secrets.TAP_GITHUB_ACCESS_TOKEN }}
          envkey_TARGET_POSTGRES_POSTGRES_USERNAME: ${{ secrets.TARGET_POSTGRES_POSTGRES_USERNAME }}
          envkey_TARGET_POSTGRES_POSTGRES_PASSWORD: ${{ secrets.TARGET_POSTGRES_POSTGRES_PASSWORD }}
          file_name: .env
      - name: Set host depending on github branch
        run: |
          if [ ${GITHUB_REF#refs/heads/} = "master" ]; then
            echo "Will deploy to production"
            echo "SSH_HOST=$PROD_HOST" >> $GITHUB_ENV
          else
            echo "Will deploy to staging"
            echo "SSH_HOST=$STAGING_HOST" >> $GITHUB_ENV
          fi
        env:
          PROD_HOST: ${{ secrets.PROD_HOST }}
          STAGING_HOST: ${{ secrets.STAGING_HOST }}
      - name: Copy .env to server
        run: |
          # Should definitely re-enable strict host key checking
          scp -i ~/.ssh/private.key -o StrictHostKeyChecking=no .env "$PROD_USERNAME"@"$SSH_HOST":.env
          # TODO: currently branch is cloned, but ideally should checkout out the specific commit
          ssh -i ~/.ssh/private.key -o StrictHostKeyChecking=no "$PROD_USERNAME"@"$SSH_HOST" "
            rm -rf cfp-data-pipeline
            git clone --single-branch --branch ${GITHUB_REF#refs/heads/} https://github.com/CodeForPhilly/cfp-data-pipeline.git
            mv .env cfp-data-pipeline
            cd cfp-data-pipeline && docker-compose down && docker-compose up --build -d
          "
        env:
          PROD_USERNAME: ${{ secrets.PROD_USERNAME }}
