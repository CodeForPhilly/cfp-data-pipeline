version: '3.3'
services:
    postgres:
        image: postgres:13.1
        environment:
            - POSTGRES_USER=${DEFAULT_USER}
            - POSTGRES_PASSWORD=${DEFAULT_PASSWORD}
            - POSTGRES_DB=airflow
        ports:
            - "5678:5432"
    airflow:
        build:
            context: ./airflow
        env_file:
          - .env
        environment:
                - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql://${DEFAULT_USER}:${DEFAULT_PASSWORD}@postgres:5432/airflow
                - AIRFLOW_CONN_POSTGRES_DEFAULT=postgresql://${DEFAULT_USER}:${DEFAULT_PASSWORD}@postgres:5432/datawarehouse
                - AIRFLOW__CORE__FERNET_KEY=${FERNET_KEY}
                - AIRFLOW__WEBSERVER__SECRET_KEY=${SECRET_KEY}
                - MELTANO_PROJECT_ROOT=${MELTANO_PROJECT_ROOT}
               #- DEFAULT_USER=${DEFAULT_USER}
               #- DEFAULT_PASSWORD=${DEFAULT_PASSWORD}
               #- LADDR_DB_USER=${LADDR_DB_USER}
               #- LADDR_DB_PASS=${LADDR_DB_PASS}
        command: >
            /bin/bash -c "
                # Wait for PG
                sleep 5

                # Copy in .Rprofile to user's home dir
                cp .Rprofile ~/

                # Clean up pid
                rm -f airflow-webserver.pid

                # Set up metadata database
                airflow db upgrade

                # Create default user
                airflow users create \
                  --username ${DEFAULT_USER} \
                  --password ${DEFAULT_PASSWORD} \
                  --email ${DEFAULT_USER}@gusty.com \
                  --firstname Default \
                  --lastname User \
                  --role Admin

                # Set up datalake db & views schema
                python3 demo-setup/datawarehouse_setup.py

                # have meltano install dependencies in the virtualenv
                cd ${MELTANO_PROJECT_ROOT} && /usr/local/venv/meltano install

                # Start airflow
                airflow scheduler &
            	  airflow webserver

                # Keep the server on no matter what
                sleep infinity
            "
        restart: always
        depends_on:
            - postgres
        volumes:
                - ./airflow:/usr/local/airflow
                - ./meltano:/usr/local/meltano
        ports:
            - "8080:8080"
    meltano:
        image: meltano/meltano:latest-python3.8
        depends_on:
          - postgres
        volumes:
          - .:/usr/local/share/cfp
        ports:
          - "5000:5000"
        working_dir: /usr/local/share/cfp/meltano/cfp-pipeline
